name: 'Release'

on:
  release:
    types: [ published ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - run: git fetch origin --tags
        shell: bash
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew build -DGITHUB_USERNAME=${{ github.actor }} -DGITHUB_TOKEN=${{ secrets.REP_TOKEN }} -x check --max-workers 1
      - name: Archive build results
        run: tar -I zstd -cf build.tar.zst build/libs
      - name: List build directory contents
        run: ls -R build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.tar.zst
          if-no-files-found: error
          retention-days: 3

  upload-release-artifacts:
    name: Upload Release Artifacts
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
      - name: Validate build.tar.zst exists
        run: test -f build.tar.zst || echo "build.tar.zst does not exist"
      - name: Unpack build artifact
        run: tar axf build.tar.zst
      - name: Validate build directory exists
        run: test -d ./build || echo "Build directory does not exist"
      - name: List unpacked build directory contents
        run: ls -R ./build
      - name: Upload Release Artifacts
        run: |
          for file in build/libs/*; do
            if [ ! -s "$file" ]; then
              echo "Skipping empty file: $file"
              continue
            fi
            echo "Uploading $file..."
            if ! gh release upload "${{ github.event.release.tag_name }}" "$file" --clobber; then
              echo "Failed to upload $file"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}